// <auto-generated />
using System;
using DataAccess.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataAccess.Migrations
{
    [DbContext(typeof(LocalContext))]
    [Migration("20231029140916_added Categories")]
    partial class addedCategories
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DataAccess.Models.Entities.PrimaryCategoryEntity", b =>
                {
                    b.Property<int>("PrimaryCategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PrimaryCategoryId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PrimaryCategoryId");

                    b.ToTable("PrimaryCategory");

                    b.HasData(
                        new
                        {
                            PrimaryCategoryId = 1,
                            Name = "Women"
                        });
                });

            modelBuilder.Entity("DataAccess.Models.Entities.PrimarySubCategoryEntity", b =>
                {
                    b.Property<int>("PrimaryCategoryId")
                        .HasColumnType("int");

                    b.Property<int>("SubCategoryId")
                        .HasColumnType("int");

                    b.HasKey("PrimaryCategoryId", "SubCategoryId");

                    b.HasIndex("SubCategoryId");

                    b.ToTable("PrimarySubCategory");

                    b.HasData(
                        new
                        {
                            PrimaryCategoryId = 1,
                            SubCategoryId = 1
                        });
                });

            modelBuilder.Entity("DataAccess.Models.Entities.ProductEntity", b =>
                {
                    b.Property<Guid>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ProductDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("ProductPrice")
                        .HasColumnType("float");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int");

                    b.Property<int?>("Rating")
                        .HasColumnType("int");

                    b.Property<int>("SubCategoryId")
                        .HasColumnType("int");

                    b.HasKey("ProductId");

                    b.HasIndex("SubCategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = new Guid("f6f76468-2183-411f-9fe1-e20b1245da22"),
                            ProductDescription = "Description",
                            ProductName = "Fine dress",
                            ProductPrice = 1000.0,
                            Quantity = 1,
                            Rating = 5,
                            SubCategoryId = 1
                        });
                });

            modelBuilder.Entity("DataAccess.Models.Entities.SubCategoryEntity", b =>
                {
                    b.Property<int>("SubCategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SubCategoryId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SubCategoryId");

                    b.ToTable("SubCategory");

                    b.HasData(
                        new
                        {
                            SubCategoryId = 1,
                            Name = "Dress"
                        });
                });

            modelBuilder.Entity("DataAccess.Models.Entities.PrimarySubCategoryEntity", b =>
                {
                    b.HasOne("DataAccess.Models.Entities.PrimaryCategoryEntity", "PrimaryCategory")
                        .WithMany()
                        .HasForeignKey("PrimaryCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataAccess.Models.Entities.SubCategoryEntity", "SubCategory")
                        .WithMany()
                        .HasForeignKey("SubCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PrimaryCategory");

                    b.Navigation("SubCategory");
                });

            modelBuilder.Entity("DataAccess.Models.Entities.ProductEntity", b =>
                {
                    b.HasOne("DataAccess.Models.Entities.SubCategoryEntity", "SubCategory")
                        .WithMany()
                        .HasForeignKey("SubCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SubCategory");
                });
#pragma warning restore 612, 618
        }
    }
}
